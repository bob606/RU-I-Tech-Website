{
  "extends": [
    // base rule set
    "next/core-web-vitals",
    "@typedigital/eslint-config",
    "@typedigital/eslint-config/react"
  ],
  "parserOptions": {
    "project": ["./tsconfig.json"]
  },
  "parser": "@typescript-eslint/parser",
  "env": {
    // add the environment you use - refer to https://eslint.org/docs/user-guide/configuring/language-options#using-configuration-files
    "node": true
  },
  "rules": {
    "react/react-in-jsx-scope": "off", // since React 17 it's not needed anymore
    "no-magic-numbers": "off", // handled by typescript-eslint
    "spaced-comment": "off", // next.config.js is otherwise not conform
    "no-shadow": "off", // false positives with enums in typescript https://github.com/typescript-eslint/typescript-eslint/issues/325
    "no-void": "off", // due to next api routes we have to return on void - so we need the void operator
    "promise/prefer-await-to-then": "off", // too opinionated
    "@typescript-eslint/no-unused-vars": "off", // covered by no-unused-vars
    "no-unused-vars": "warn", // makes you think you used the wrong type, when new var instantly get marked as errors
    "linebreak-style": "off" // causes issues on windows machines and is automatically filtered by GitHub
    "react/require-default-props":"off", //This rule aims to ensure that any non-required prop types of a component has a corresponding defaultProps value.
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
   ] //Next.js automatically resolves package import extensions whereas eslint requires the extension to be present, this rule disables the rule check
  },
  "plugins": ["@typescript-eslint"],
  // ignore configs in other directories
  "root": true
}
